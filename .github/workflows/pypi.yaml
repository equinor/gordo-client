name: PiPY Publish

on:
  push:
    branches:
      - master
    tags:
      - '*'
jobs:
  publish-to-pypi:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - name: Set tag version
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF:11}

      - name: Fetch tags
        run: git fetch origin "+refs/tags/*:refs/tags/*"

      - name : Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: 'x64'

      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache Poetry virtualenv
        uses: actions/cache@v2
        id: cached-poetry-dependencies
        with:
          path: ~/.virtualenvs
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Semantic versioning
        id: versioning
        uses: equinor/semantic-version@v4.2.0
        with:
          branch: master
          tag_prefix: "v"
          major_pattern: "BREAKING CHANGE:"
          minor_pattern: "feat:"
          main_format: "${major}.${minor}.${patch}"
          increment_format: "${increment}"
          increment_delimiter: "dev"

      - name: Create Release
        if: ${{ !startsWith(github.ref , 'refs/pull/') && !startsWith(github.ref , 'refs/tags/') }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ steps.versioning.outputs.tag }}
          release_name: ${{ steps.versioning.outputs.tag }}
          prerelease: true

      - name: Set tag version
        run: poetry version ${{ steps.vars.outputs.tag }}

      - name: Build
        run: poetry build

      - name: Pypi Publish
        run: poetry publish -u __token__ -p ${{ secrets.PYPI_TOKEN }}
